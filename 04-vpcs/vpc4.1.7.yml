AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  VpcCidr:
    Description: Please enter the IP Range (CIDR Notation) for this private subnet
    Type: String
  PublicSubnetCidr:
    Description: Please enter the IP Range (CIDR Notation) for this private subnet
    Type: String

  PublicSubnetCidr1:
    Description: Please enter the IP Range (CIDR Notation) for this private subnet
    Type: String

Resources:
  PaschalVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VpcCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags: 
        - Key: Name
          Value: paschal.onor.labs

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PaschalVPC
      CidrBlock: !Ref PublicSubnetCidr
      AvailabilityZone: !Select [0, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: paschal.onor.labs Public Subnet 1

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref PaschalVPC
      CidrBlock: !Ref PublicSubnetCidr1
      AvailabilityZone: !Select [1, !GetAZs '' ]
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: paschal.onor.labs Public Subnet 2


  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: User
          Value: paschal.onor.labs Test IGW

  myInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref myInternetGateway
      VpcId: !Ref PaschalVPC

  myPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref PaschalVPC
      Tags:
      - Key: User
        Value: paschal.onor.labs Public Route Table
      
  myPublicRoute:
    Type: AWS::EC2::Route
    # DependsOn: !Ref myInternetGateway
    Properties:
       RouteTableId: !Ref myPublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref myInternetGateway
  
  myPublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref myPublicRouteTable

  myPublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet2
      RouteTableId: !Ref myPublicRouteTable

  NatGateWayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: Paschal-Onor-EIP
  
  NatGateWay:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateWayEIP.AllocationId
      SubnetId:
        !Ref Subnet1
        # !Ref Subnet2
      Tags:
        - Key: Name
          Value: Paschal-Onor-NGW-Subnet


Outputs:
  OutputForPaschalVPCId:
    Description: "Paschal VPC"
    Value: !Ref PaschalVPC
    Export:
      Name: !Sub "${AWS::StackName}-VPCID"
  OutputFormyPublicSubnetId1:
    Description: "my Public Subnet"
    Value: !Ref Subnet1
    Export:
      Name: !Sub "${AWS::StackName}-Subnet1"
  OutputFormyPublicSubnetId2:
    Description: "my Public Subnet"
    Value: !Ref Subnet2
    Export:
      Name: !Sub "${AWS::StackName}-Subnet2"
  OutputFormyNatGateWayId:
    Description: "My Nat GateWay Id"
    Value: !Ref NatGateWay
    Export:
      Name: !Sub "${AWS::StackName}-NatGateWay"




  
