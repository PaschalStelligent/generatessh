AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  LatestAMIID:
    Description: Latest Amazon Machine Image ID
    Type: AWS::EC2::Image::Id
  EC2InstanceType:
    Description: Type of Instance
    Type: String 
  KeyPair:
    Description: Key Value Pair
    Type: String
    Default: "paschalonor"
  SSHLocation:
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: The IP address range that can be used to access the web server using SSH.
    MaxLength: '18'
    MinLength: '9'
    Type: String

Resources:
  MyEC2Instance:

    Type: AWS::EC2::Instance
    Properties: 
      ImageId: !Ref LatestAMIID
      KeyName: !Ref KeyPair
      InstanceType: !Ref EC2InstanceType
      NetworkInterfaces: 
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          SubnetId: 
            !ImportValue "Paschal-Onor-PrivateSubnet"
      Tags: #adding tags
        - Key: User
          Value: paschal.onor.labs

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SSH Security Group
      VpcId: !ImportValue "Paschal-Onor-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref SSHLocation
      - IpProtocol: icmp
        FromPort: 8
        ToPort: -1
        CidrIp: !Ref SSHLocation


      Tags:
      - Key: User
        Value: paschal.onor.labs SSH Security Group

Outputs: #Outputing the ID of the EC2 and it Public IP 
  MyEC2Instance:
    Description: The ID of the Instance
    Value: !Ref MyEC2Instance
    Export:
      Name: !Sub "${AWS::StackName}-MyEC2Instance"

  PublicIp:
    Description: MyEC2Instance Public IP
    Value: !GetAtt MyEC2Instance.PublicIp
    Export:
      Name: !Sub "${AWS::StackName}-PublicIp"

